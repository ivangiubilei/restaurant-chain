--- notes for OLS

--- CREATE THE DATA LABEL GROUPS
BEGIN
SA_COMPONENTS.CREATE_GROUP (
policy_name => 'Emp_OLS_POL',
short_name => 'ad',
long_name => 'Administration',
group_num => 5000);

SA_COMPONENTS.CREATE_GROUP (
policy_name => 'Emp_OLS_POL',
group_num => 3000,
short_name => 'kt',
long_name => 'Kitchen',
parent_name => 'ad');

SA_COMPONENTS.CREATE_GROUP (
policy_name => 'Emp_OLS_POL',
group_num => 1000,
short_name => 'rr',
long_name => 'restaurant_room',
parent_name => 'ad');
END;
/

--- ASSOCIATING THE POLICY COMPONENTS
BEGIN
SA_LABEL_ADMIN.CREATE_LABEL (
policy_name => 'Emp_OLS_POL',
label_tag => 1100,
label_value => 'HS:PL:AD,KT,RR', -- HIGHLY_SENSITIVE level for the PL compartment
data_label => TRUE);

SA_LABEL_ADMIN.CREATE_LABEL (
policy_name => 'Emp_OLS_POL',
label_tag => 2100,
label_value => 'HS:AG:AD,KT,RR', -- HIGHLY_SENSITIVE level for the AG compartment,HIGHLY_SENSITIVE:ARIGATTO:AD, KT, RR -- CEO
data_label => TRUE);

SA_LABEL_ADMIN.CREATE_LABEL (
policy_name => 'Emp_OLS_POL',
label_tag => 3100,
label_value => 'S:AG:'AD,KT,RR, --SENSITIVE level for the AG compartment,SENSITIVE:ARIGATTO:AD,KT,RR -- DIRECTOR
data_label => TRUE);
END;
/

--- AUTHORIZING A LEVEL
BEGIN
SA_USER_ADMIN.SET_LEVELS (
policy_name => 'Emp_OLS_POL',
user_name => 'John_Smith', --CEO
max_level => 'HS',
min_level => 'U',
def_level => 'HS',
row_level => 'HS');
END;
/

SA_USER_ADMIN.SET_LEVELS (
policy_name => 'Emp_OLS_POL',
user_name => 'Olivia_Evans', --Director
max_level => 'S',
min_level => 'U',
def_level => 'S',
row_level => 'S');
END;
/

--- AUTHORIZING A COMPARTMENT
BEGIN
SA_USER_ADMIN.SET_COMPARTMENTS (
policy_name => 'Emp_OLS_POL',
user_name => 'john_Smith',
read_comps => 'AG',
write_comps => 'AG',
def_comps => 'AG',
row_comps => 'AG');
END;
/

--- AUTHORIZING A GROUP
BEGIN
SA_USER_ADMIN.SET_GROUPS (
policy_name => 'Emp_OLS_POL',
user_name => 'John_Smith', -- check all privileges for the CEO
read_groups => 'AD', -- Grants read access to 'AD' and all its child groups
write_groups => 'AD',
def_groups => 'AD',
row_groups => 'AD');

SA_USER_ADMIN.SET_GROUPS (
policy_name => 'Emp_OLS_POL',
user_name => 'Olivia_Evans', -- Director with specific access
read_groups => 'AD',
write_groups => 'kt,rr', -- Grants write access only to 'KT' and 'RR' but not 'AD'
def_groups => 'kt,rr',
row_groups => 'kt,rr');
END;

--- To verify the setup (policies and authorization)
SELECT * FROM ALL_SA_USER_LABELS WHERE USER_NAME = 'John_Smith';
SELECT * FROM ALL_SA_USER_LABELS WHERE USER_NAME = 'Olivia_Evans';


--- GRANTING PRIVILAGES TO USER
BEGIN
SA_USER_ADMIN.SET_USER_PRIVS(
policy_name => 'Emp_OLS_POL',
user_name => 'John_Smith',
privileges => 'FULL');
END;
/
BEGIN
SA_USER_ADMIN.SET_USER_PRIVS (
policy_name => 'Emp_OLS_POL',
user_name => 'Olivia_Evans',
privileges => 'READ, WRITEDOWN');
END;
/
